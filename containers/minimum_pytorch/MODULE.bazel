# Copyright 2025 Google LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

module(
    name = "test_pytorch",
    version = "0.0.0",
    compatibility_level = 1,
)

bazel_dep(
    name = "rules_distroless",
    version = "0.5.1",
)
bazel_dep(
    name = "rules_oci",
    version = "2.2.6",
)
bazel_dep(
    name = "rules_python",
    version = "1.4.1",
)
bazel_dep(
    name = "rules_pkg",
    version = "1.1.0",
)
bazel_dep(
    name = "aspect_rules_py",
    version = "1.3.1",
)
bazel_dep(name = "oak")
archive_override(
    module_name = "oak",
    integrity = "sha256-m1Dk4m7ar2CgPwzQ85qnQd50vG+7Is/mUQElEHjJIe8=",
    strip_prefix = "oak-af94fc2c4f8256be948c23af59c171b90dbc672c",
    url = "https://github.com/project-oak/oak/archive/af94fc2c4f8256be948c23af59c171b90dbc672c.tar.gz",
)

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = False,
    ignore_root_user_error = True,
    python_version = "3.11",
)

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_cc_debian12_base",
    digest = "sha256:6714977f9f02632c31377650c15d89a7efaebf43bab0f37c712c30fc01edb973",
    image = "gcr.io/distroless/cc-debian12",
    platforms = ["linux/amd64"],
)
use_repo(oci, "distroless_cc_debian12_base")

apt = use_extension(
    "@rules_distroless//apt:extensions.bzl",
    "apt",
)
apt.install(
    name = "bookworm",
    lock = "@@//:bookworm.lock.json",
    manifest = "//:bookworm.yaml",
)
use_repo(apt, "bookworm")

# Define the PIP deps we need from the requirements.in file.
pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    experimental_index_url = "https://download.pytorch.org/whl/cu128",
    hub_name = "pip",
    python_version = "3.11",
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "pip")
