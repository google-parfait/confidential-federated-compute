# Add build rules for Rust bindings.
--- /dev/null
+++ rust/bssl-crypto/BUILD
@@ -0,0 +1,14 @@
+load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")
+
+rust_library(
+    name = "bssl-crypto",
+    srcs = glob(["src/**/*.rs"]),
+    crate_features = ["std"],
+    visibility = ["//visibility:public"],
+    deps = ["//rust/bssl-sys"],
+)
+
+rust_test(
+    name = "bssl-crypto_test",
+    crate = ":bssl-crypto",
+)

--- /dev/null
+++ rust/bssl-sys/BUILD
@@ -0,0 +1,52 @@
+load("@rules_cc//cc:defs.bzl", "cc_library")
+load("@rules_rust//rust:defs.bzl", "rust_library")
+load("@rules_rust_bindgen//:defs.bzl", "rust_bindgen")
+
+rust_library(
+    name = "bssl-sys",
+    srcs = glob(["src/**/*.rs"]),
+    compile_data = [":bindgen"],
+    rustc_env = {"BINDGEN_RS_FILE": "$(execpath :bindgen)"},
+    rustc_flags = ["--cfg=bindgen_rs_file"],
+    visibility = ["//visibility:public"],
+    deps = [":bindgen_c_thunks_library"],
+)
+
+# Flags derived from CMakeLists.txt.
+rust_bindgen(
+    name = "bindgen",
+    bindgen_flags = [
+        "--allowlist-file=.*[[:punct:]]include[[:punct:]]openssl[[:punct:]].*\\.h",
+        "--no-derive-default",
+        "--enable-function-attribute-detection",
+        "--use-core",
+        "--default-macro-constant-type=signed",
+        "--rustified-enum=point_conversion_form_t",
+    ],
+    cc_lib = ":wrapper",
+    header = "wrapper.h",
+    wrap_static_fns = True,
+)
+
+filegroup(
+    name = "bindgen_c_thunks",
+    srcs = [":bindgen"],
+    output_group = "bindgen_c_thunks",
+)
+
+cc_library(
+    name = "bindgen_c_thunks_library",
+    srcs = [":bindgen_c_thunks"],
+    copts = ["-I."],
+    deps = [":wrapper"],
+)
+
+cc_library(
+    name = "wrapper",
+    srcs = ["rust_wrapper.h"],
+    hdrs = ["wrapper.h"],
+    deps = [
+        "//:crypto",
+        "//:ssl",
+    ],
+)
