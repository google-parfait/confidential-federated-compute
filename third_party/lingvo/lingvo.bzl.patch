# Patch custom_kernel_library to use tf_kernel_library directly. The lingvo
# implementation replies on a tf_includes repo which is created inside lingvo
# based on TF 2.13. This patch potentially can be removed once lingvo moves to
# newer version of TensorFlow.
diff --git lingvo/lingvo.bzl lingvo/lingvo.bzl
index 251e25f88..2514ffdce 100644
--- lingvo/lingvo.bzl
+++ lingvo/lingvo.bzl
@@ -1,4 +1,5 @@
 """Implements custom rules for Lingvo."""
+load("@org_tensorflow//tensorflow:tensorflow.bzl", "tf_kernel_library")

 def tf_copts():
     #  "-Wno-sign-compare", "-mavx" removed for compat with aarch64
@@ -57,14 +58,22 @@ def lingvo_cc_test(name, srcs, deps = [], **kwargs):
 lingvo_py_binary = native.py_binary
 
 def custom_kernel_library(name, op_def_lib, srcs, hdrs = [], deps = []):
-    native.cc_library(
+    tf_deps = [
+        "@org_tensorflow//tensorflow/core:core_cpu",
+        "@org_tensorflow//tensorflow/core:framework",
+        "@org_tensorflow//tensorflow/core:lib",
+    ]
+    tags = []
+    for x in tf_deps:
+        tags.append("req_dep=%s" % x)
+
+    tf_kernel_library(
         name = name,
         srcs = srcs,
         hdrs = hdrs,
         copts = tf_copts(),
-        deps = [
-            "@tensorflow_includes//:includes",
-        ] + deps + op_def_lib,
+        tags = tags,
+        deps = deps + op_def_lib + tf_deps,
         alwayslink = 1,
     )
 
@@ -74,8 +83,8 @@ def gen_op_cclib(name, srcs, deps = [], nonportable_deps = []):
         name = name,
         srcs = srcs,
         deps = [
-            "@tensorflow_includes//:includes",
-            "@tensorflow_solib//:framework_lib",
+            "@org_tensorflow//tensorflow/core:framework",
+            "@org_tensorflow//tensorflow/core:lib",
         ] + deps + nonportable_deps,
         alwayslink = 1,
         copts = tf_copts(),